PROJECT(aliyun_log_c_sdk)

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)  

set(CMAKE_VERSION 2.0.0)
if(WIN32)
    add_definitions(-DWIN32)
endif()
# default C / CXX flags
set(CMAKE_POSITION_INDEPENDENT_CODE ON)
set(CMAKE_C_FLAGS "/W3 /D_LARGEFILE64_SOURCE")
set(CMAKE_CXX_FLAGS "/W3 /D_LARGEFILE64_SOURCE")
set(CMAKE_C_FLAGS_DEBUG "/Zi /Od /D_LARGEFILE64_SOURCE")
set(CMAKE_CXX_FLAGS_DEBUG "/Zi /Od /D_LARGEFILE64_SOURCE")
set(CMAKE_C_FLAGS_RELEASE "/O2 /DNDEBUG /D_LARGEFILE64_SOURCE")
set(CMAKE_CXX_FLAGS_RELEASE "/O2 /DNDEBUG /D_LARGEFILE64_SOURCE")
set(CMAKE_C_FLAGS_MINSIZEREL "/Os /DNDEBUG /D_LARGEFILE64_SOURCE")
set(CMAKE_CXX_FLAGS_MINSIZEREL "/Os /DNDEBUG /D_LARGEFILE64_SOURCE")
set(CMAKE_C_FLAGS_RELWITHDEBINFO "/Zi /O2 /DNDEBUG /D_LARGEFILE64_SOURCE")
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "/Zi /O2 /DNDEBUG /D_LARGEFILE64_SOURCE")

set(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/build/${CMAKE_BUILD_TYPE}/lib)
set(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/build/${CMAKE_BUILD_TYPE}/bin)
set(CMAKE_C_OUTPUT_EXTENSION_REPLACE 1)
set(CMAKE_CXX_OUTPUT_EXTENSION_REPLACE 1)

option(ADD_LOG_KEY_VALUE_FUN "ON for generating add log key&value functions" OFF)

IF(ADD_LOG_KEY_VALUE_FUN)
    add_definitions(-DLOG_KEY_VALUE_FLAG)
ENDIF(ADD_LOG_KEY_VALUE_FUN)

#curl-config
# FIND_PROGRAM(CURL_CONFIG_BIN NAMES curl-config)
  
# IF (CURL_CONFIG_BIN)
#     EXECUTE_PROCESS(
#         COMMAND ${CURL_CONFIG_BIN} --libs
#         OUTPUT_VARIABLE CURL_LIBRARIES
#         OUTPUT_STRIP_TRAILING_WHITESPACE
#         )
# ELSE()
#     MESSAGE(FATAL_ERROR "Could not find curl-config")
# ENDIF()
  
# Compile and link lib_log_c_sdk
set(CURL_INCLUDE_DIR include)
set(CURL_LIBRARIES Release/libcurl.lib)
include_directories(${CURL_INCLUDE_DIR})

# LINK_LIBRARIES(curl)

aux_source_directory(src SRC_LIST)
aux_source_directory(src/curl_adapter CURL_ADAPTER_SRCS)
add_library(${CMAKE_PROJECT_NAME} STATIC ${SRC_LIST} ${CURL_ADAPTER_SRCS})
target_include_directories(${CMAKE_PROJECT_NAME} PUBLIC src src/curl_adapter)

target_link_options(${CMAKE_PROJECT_NAME} PRIVATE "SHELL:${CURL_LIBRARIES}")

set_target_properties(${CMAKE_PROJECT_NAME} PROPERTIES VERSION ${CMAKE_VERSION}  SOVERSION ${CMAKE_VERSION})
